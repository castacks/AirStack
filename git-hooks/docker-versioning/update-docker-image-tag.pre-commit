#!/bin/bash

# Pre-commit hook to update DOCKER_IMAGE_TAG in .env file with git commit hash
# when Dockerfile or docker-compose.yaml files are modified

# Check if any Dockerfile or docker-compose.yaml files are staged for commit
DOCKER_FILES_CHANGED=$(git diff --cached --name-only | grep -E 'Dockerfile|docker-compose\.yaml$')

on_gh_pages=$([ "$(git rev-parse --abbrev-ref HEAD)" = "gh-pages" ] && echo true || echo false)

if [ "$on_gh_pages" = false ] && [ -n "$DOCKER_FILES_CHANGED" ]; then
    echo "Docker-related files changed. Updating DOCKER_IMAGE_TAG in .env file..."
    
    # Get the current commit hash (short version)
    COMMIT_HASH=$(git rev-parse --short HEAD)
    
    # Update the DOCKER_IMAGE_TAG in .env file
    if [ -f ".env" ]; then
        # Check if DOCKER_IMAGE_TAG line exists
        if grep -q "^DOCKER_IMAGE_TAG=" .env; then
            # Replace the existing DOCKER_IMAGE_TAG line and ensure comment is above it
            # First, remove any existing auto-generated comment
            sed -i '/^# auto-generated from git commit hash$/d' .env
            # Add the comment above the DOCKER_IMAGE_TAG line
            sed -i '/^DOCKER_IMAGE_TAG=/i\# auto-generated from git commit hash' .env
            # Update the DOCKER_IMAGE_TAG value
            sed -i "s/^DOCKER_IMAGE_TAG=.*$/DOCKER_IMAGE_TAG=\"$COMMIT_HASH\"/" .env
            echo "Updated DOCKER_IMAGE_TAG to $COMMIT_HASH in .env file"
            
            # Stage the modified .env file for commit
            git add .env
        else
            echo "Error: DOCKER_IMAGE_TAG line not found in .env file"
            exit 1
        fi
    else
        echo "Error: .env file not found"
        exit 1
    fi
fi

exit 0
