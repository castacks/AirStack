# desktop build
services:
  # ===================================================================================================================
  # for developing locally on a single machine
  # note, this service name is currently used as the name of the robot
  robot:
    profiles:
      - ""
      - sitl
    extends:
      file: ./robot-base-docker-compose.yaml
      service: robot_base
    image: &desktop_image ${PROJECT_DOCKER_REGISTRY}/${PROJECT_NAME}:v${PROJECT_VERSION}_robot-x86-64
    build:
      dockerfile: ./Dockerfile.robot
      args:
        BASE_IMAGE: ubuntu:22.04
      tags:
        - *desktop_image
    # we use tmux send-keys so that the session stays alive
    command: >
      bash -c "ssh service restart;
      tmux new -d -s robot_bringup
      && tmux send-keys -t robot_bringup 
      'if [ ! -f "/root/ros_ws/install/setup.bash" ]; then bws && sws; fi;
      ros2 launch robot_bringup robot.launch.xml' ENTER
      && sleep infinity"
    # assumes you're connected to work internet, so creates a network to isolate from other developers on your work internet
    networks:
      - airstack_network
    # allow scaling multiple robots on the same machine
    ports:
      # for ssh, starting from 2223-2243 on the host port all map to 22 in the container. Assumes no more than 21 robots
      - "2223-2243:22"

  # ===================================================================================================================
  # for running on an NVIIDA jetson (linux for tegra) device
  robot_l4t:
    profiles:
      - hitl
      - deploy
    extends:
      file: ./robot-base-docker-compose.yaml
      service: robot_base
    image: &l4t_image ${PROJECT_DOCKER_REGISTRY}/${PROJECT_NAME}:v${PROJECT_VERSION}_robot-l4t
    build:
      dockerfile: ./Dockerfile.robot
      args:
        BASE_IMAGE: nvcr.io/nvidia/l4t-jetpack:r36.4.0
        REAL_ROBOT: true
      tags:
        - *l4t_image
    # we use tmux send-keys so that the session stays alive
    command: >
      bash -c "ssh service restart;
      tmux new -d -s robot_bringup
      && tmux send-keys -t robot_bringup 
      'if [ ! -f "/root/ros_ws/install/setup.bash" ]; then bws && sws; fi;
      ros2 launch robot_bringup robot.launch.xml sim:="false" ' ENTER
      && sleep infinity"
    runtime: nvidia
    # assumes network isolation via a physical router, so uses network_mode=host
    network_mode: host