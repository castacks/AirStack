# docker compose file
services:
  # ==============================================================================
  isaac-sim:
    image: &isaac-sim-image airlab-storage.andrew.cmu.edu:5001/shared/isaac-sim_ros-humble:v1.0.2
    build:
      context: ../
      dockerfile: docker/Dockerfile.isaac-ros
      tags:
        - *isaac-sim-image
    container_name: isaac-sim
    entrypoint: ""  # override the default entrypoint with nothing
    # for some reason the tmux session manager only works when isaac is running in tmux
    command: >
      bash -c "
      tmux new -d -s isaac
      && tmux send-keys -t isaac 'runapp' ENTER
      && sleep infinity"
    # Interactive shell
    stdin_open: true # docker run -i
    tty: true # docker run -t
    ipc: host
    privileged: true
    networks:
      airstack_network:
        ipv4_address: 172.31.0.200
    env_file: ./isaac-sim/omni_pass.env
    environment:
      # NVIDIA stuff
      - ACCEPT_EULA=Y
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      # ROS2 stuff
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - FASTRTPS_DEFAULT_PROFILES_FILE=/isaac-sim/fastdds.xml
    deploy:
      # let it use the GPU
      resources:
        reservations:
          devices:
            - driver: nvidia # https://stackoverflow.com/a/70761193
              count: 1
              capabilities: [ gpu ]
    volumes:
      # display
      - $HOME/.Xauthority:/root/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
      # isaac sim stuff
      - ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw
      - ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw
      - ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw
      - ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw
      - ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw
      - ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw
      - ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw
      - ~/docker/isaac-sim/documents:/root/Documents:rw
      # developer stuff
      - ./isaac-sim/.bashrc:/root/.bashrc:rw # bash config
      - ~/.bash_history:/root/.bash_history:rw # save cmdline history
      # code
      - ./extras/kit-app-template/source/extensions/:/root/Documents/Kit/shared/exts/
      - ./extras:/extras:rw
      - ./extras/inputrc:/etc/inputrc
      - ./extras/config:/root/.nvidia-omniverse/config:rw

  # ==============================================================================
  robot:
    image: &airstack-dev-image airlab-storage.andrew.cmu.edu:5001/shared/airstack-dev:v0.5.4
    build:
      context: ../
      dockerfile: docker/Dockerfile.airstack-dev
      tags:
        - *airstack-dev-image
    entrypoint: ""
    # we use tmux send-keys so that the session stays alive
    # command: >
    #   bash -c "ssh service restart;
    #   tmux new -d -s robot_bringup
    #   && tmux send-keys -t robot_bringup 'ros2 launch robot_bringup robot.launch.xml' ENTER
    #   && sleep infinity"
    # Interactive shell
    stdin_open: true # docker run -i
    tty: true # docker run -t
    # Needed to display graphical applications
    privileged: true
    networks:
      - airstack_network
    environment:
      - DISPLAY
      - QT_X11_NO_MITSHM=1
    deploy:
      # let it use the GPU
      resources:
        reservations:
          devices:
            - driver: nvidia # https://stackoverflow.com/a/70761193
              count: 1
              capabilities: [ gpu ]
    ports:
      # for ssh, starting from 2223-2243 on the host port all map to 22 in the container. Assumes no more than 21 robots
      - "2223-2243:22"
    volumes:
      # display stuff
      - $HOME/.Xauthority:/root/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
      # developer stuff
      - ./robot/.bashrc:/root/.bashrc:rw # bash config
      - ~/.bash_history:/root/.bash_history:rw # save cmdline history
      - /var/run/docker.sock:/var/run/docker.sock # access docker API for container name
      # autonomy stack stuff
      - ./..:/root/AirStack:rw

  # ==============================================================================
  ground-control-station:
    image: *airstack-dev-image
    container_name: ground-control-station
    entrypoint: ""
    command: >
      bash -c "ssh service restart;
      tmux new -d -s gcs_bringup
      && tmux send-keys -t gcs_bringup 'ros2 launch gcs_bringup gcs.launch.xml' ENTER
      && sleep infinity"
    # Interactive shell
    stdin_open: true # docker run -i
    tty: true # docker run -t
    # Needed to display graphical applications
    ipc: host
    privileged: true
    networks:
      - airstack_network
    environment:
      - DISPLAY
      - QT_X11_NO_MITSHM=1
    deploy:
      # let it use the GPU
      resources:
        reservations:
          devices:
            - driver: nvidia # https://stackoverflow.com/a/70761193
              count: 1
              capabilities: [ gpu ]
    ports:
      # for ssh
      - 2222:22
    volumes:
      # display stuff
      - $HOME/.Xauthority:/root/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
      # developer stuff
      - ./ground_control_station/.bashrc:/root/.bashrc:rw # bash config
      - ~/.bash_history:/root/.bash_history:rw # save cmdline history
      - /var/run/docker.sock:/var/run/docker.sock # access docker API for container name
      # autonomy stack stuff
      - ./..:/root/AirStack:rw

  # ==============================================================================
  # live mkdocs container
  docs:
    image: squidfunk/mkdocs-material
    container_name: docs
    # Interactive shell
    stdin_open: true # docker run -i
    tty: true # docker run -t
    # network_mode: host
    ports:
      - "8000:8000"
    volumes:
      # autonomy stack stuff
      - ../:/docs:rw

networks:
  airstack_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/24
