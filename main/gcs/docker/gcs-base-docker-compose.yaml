---
# docker compose file
services:
  gcs-base:
    build:
      context: ../
      dockerfile: docker/Dockerfile.gcs
      tags:
        - ${PROJECT_DOCKER_REGISTRY}/${PROJECT_NAME}:v${DOCKER_IMAGE_TAG}_gcs
    command: >
      bash -c "ssh service restart;
      tmux new -d -s gcs_bringup;
      autolaunch=${AUTOLAUNCH:-'false'};
      if [ $$autolaunch = 'true' ]; then
        tmux send-keys -t gcs_bringup 'bws && sws; ros2 launch ${GCS_LAUNCH_PACKAGE} ${GCS_LAUNCH_FILE}' ENTER;
      fi;
      sleep infinity"
    # Interactive shell
    deploy:
      # let it use the GPU
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
              count: 1
              driver: nvidia
    entrypoint: ''
    environment:
      - DISPLAY
      - QT_X11_NO_MITSHM=1
    image: ${PROJECT_DOCKER_REGISTRY}/${PROJECT_NAME}:v${DOCKER_IMAGE_TAG}_gcs
    # Needed to display graphical applications
    # ipc: host
    privileged: true
    stdin_open: true
    tty: true
    volumes:
      # display stuff
      - $HOME/.Xauthority:/home/gcs/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
      # developer stuff
      - ../../common/.bash_profile:/home/gcs/.bash_profile:rw
      - .bashrc:/home/gcs/.bashrc:rw
      - ../../common/.tmux.conf:/home/gcs/.tmux.conf:rw
      - ../../common/ros_packages:/home/gcs/ros_ws/src/common:rw
      - ../../common/inputrc:/etc/inputrc:rw
      # autonomy stack stuff
      - ../..:/home/gcs/AirStack
      - ../../common/ros_packages:/home/gcs/AirStack/gcs/ros_ws/src/common:rw # common ROS packages
      - ../../common/ros_packages/fastdds.xml:/home/gcs/AirStack/gcs/ros_ws/fastdds.xml:rw # fastdds.xml