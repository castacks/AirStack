# This is the main .env file for AirStack, which sets docker compose variables for variable interpolation.
# Standard Usage: airstack --env-file .env up

# Warning: even though this file is organized into sections, all variables get propagated to all sub-level 
#  docker-compose files, so be careful about naming conflicts.

# =============== PROJECT ====================
# These variables are used to tag the docker images.
PROJECT_NAME="airstack"
# If you've run ./airstack.sh setup, then this will auto-generate from the git commit hash every time a change is made 
# to a Dockerfile or docker-compose.yaml file. Otherwise this can also be set explicitly to make a release version.
# auto-generated from git commit hash
DOCKER_IMAGE_TAG="d909f943"
# Can replace with your docker hub username
PROJECT_DOCKER_REGISTRY="airlab-storage.andrew.cmu.edu:442/airstack"
# ============================================

# ================= Common ===================
AUTOLAUNCH="true"  # If false, the docker-compose will just spawn idle docker containers with no launch command.
NUM_ROBOTS="1"
ROBOT_DEFINTIONS="/config/robot_definitions.yaml"  # Path to the robot definitions file, which is mounted at /config in containers.

# ================= CONFIG ===================
# Config file paths - config directory is mounted at /config in containers
CONFIG_MOUNT_PATH="/config"
# =============================================

# ============== SIMULATION =====================
ISAAC_SIM_GUI="omniverse://airlab-storage.andrew.cmu.edu:8443/Library/Assets/Pegasus/iris_with_sensors.pegasus.robot.usd"
ISAAC_SIM_STANDALONE="" # pass in a python script to run in standalone mode, e.g. "scripts/standalone_sim.py"
PLAY_SIM_ON_START="false"
# ===============================================

# ================= ROBOT =====================
# See robot/docker/docker-compose.yaml for how these variables get propagated in 
# the container's entry command. See robot's .bashrc for additional variables
ROBOT_LAUNCH_PACKAGE="robot_bringup"
ROBOT_LAUNCH_FILE="robot.launch.xml"

# See robot-base-docker-compose.yaml for how these variables get propagated. 
AUTONOMY_LAUNCH_PACKAGE="autonomy_bringup"
AUTONOMY_LAUNCH_FILE="autonomy.launch.xml"
# --
INTERFACE_LAUNCH_PACKAGE="interface_bringup"
INTERFACE_LAUNCH_FILE="interface.launch.xml"
# --
SENSORS_LAUNCH_PACKAGE="sensors_bringup"
SENSORS_LAUNCH_FILE="sensors.launch.xml"
# --
PERCEPTION_LAUNCH_PACKAGE="perception_bringup"
PERCEPTION_LAUNCH_FILE="perception.launch.xml"
# --
LOCAL_LAUNCH_PACKAGE="local_bringup"
LOCAL_LAUNCH_FILE="local.launch.xml"
# --
GLOBAL_LAUNCH_PACKAGE="global_bringup"
GLOBAL_LAUNCH_FILE="global.launch.xml"
# --
BEHAVIOR_LAUNCH_PACKAGE="behavior_bringup"
BEHAVIOR_LAUNCH_FILE="behavior.launch.xml"

PX4_BASE_PORT=4560   # Base port for PX4 SITL instances defined by Pegasus, incremented by ROS_DOMAIN_ID for each robot in .bashrc. TODO: make PX4 and ArduPilot consistent?
PX4_CEILING_PORT=4660  # Ceiling for PX4 ports, to avoid port conflicts if many robots are spawned
ARDUPILOT_BASE_PORT=14550  # Base port for ArduPilot SITL instances defined by Pegasus, incremented by ROS_DOMAIN_ID for each robot in .bashrc
ARDUPILOT_CEILING_PORT=14650  # Ceiling for ArduPilot ports, to avoid port conflicts if many robots are spawned
MAVROS_BASE_PORT=15550  # Base port for MAVROS instances, incremented by ROS_DOMAIN_ID for each robot in .bashrc
MAVROS_CEILING_PORT=15650  # Ceiling for MAVROS ports, to avoid port conflicts if many robots are spawned
# ===============================================

# =========== GROUND CONTROL STATION ============
# See gcs/docker/docker-compose.yaml for how these variables 
# get propagated in the container's entry command.
GCS_LAUNCH_PACKAGE="gcs_bringup"
GCS_LAUNCH_FILE="gcs.launch.xml"
# ===============================================
